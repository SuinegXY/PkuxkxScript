<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on 2016年 十二月 14日 星期三, 下午 4:26 -->
<!-- MuClient version 4.99 -->

<!-- Plugin "combine_gem" generated by Plugin Wizard -->

<muclient>
<plugin
   name="combine_gem"
   author="休莱格"
   id="2b0f75d3732ce149fb8bc18b"
   language="Lua"
   purpose="宝石相关功能"
   save_state="y"
   date_written="2017-11-24 14:30:00"
   requires="4.99"
   version="1.5"
   >
<!--V1.1在yjqa的基础上修改而成,支持合日月魂-->
<!--V1.2修复BUG-->
<!--V1.3修复BUG-->
<!--V1.4添加卖宝石功能-->
<!--V1.5添加给宝石功能-->
</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Script  -->


<script>
<![CDATA[
require "tprint"

Note("----------------------------------------------------------------------------------------------------------");
Note("---------------输入cg开始合并升级宝石；mgr合并日魂;mgy合并月魄;SellGem卖宝石;GiveGem给宝石----------------")
Note("---------------GiveGem:支持以下格式:----------------------------------------------------------------------");
Note("------------------------------------1.GiveGem suineg 天 玄武甲;-------------------------------------------");
Note("------------------------------------2.GiveGem suineg 玄武甲;----------------------------------------------");
Note("------------------------------------3.GiveGem suineg 天;--------------------------------------------------");
Note("----------------------------------------------------------------------------------------------------------");

--合并升级的宝石等级
local gem_level_set="雷"

--合并日魂的宝石等级
local gem_rihun_set="天"

--合并月魄的宝石等级
local gem_yuepo_set="天"

--打坐或睡觉完毕后的触发描述
local dazuo_finish_desc="^[>]*你运功完毕，深深吸了口气，站了起来。\\s*$|^[>]*你只觉神元归一，全身精力弥漫，无以复加，忍不住长啸一声，徐徐站了起来。\\s*$|^[>]*你一觉醒来，精神抖擞地活动了几下手脚。\\s*$"

--排除的宝石类型,输入 "精金" "神龙骨" "日魂" 等类型的到下面的数组，则合成升级会忽略对应类型的宝石
local gem_class_not={}

--排除的带等级的宝石类型，输入 "火精金" "雷日魂" "水玄武甲" 等格式到下面数组中则排除。
local gem_not={"火炎晶", "火玉髓", "雷玉髓", "雷玄冰", "雷炎晶", "雷精金", "山精金", "山玉髓", "山玄冰", "山炎晶", "地精金", "地玉髓", "地玄冰", "地炎晶"}

local m_strGemNot = "";
local m_nIndex = 1;
local m_bContinue = false;

------------------------------------------------------------------
--操作类别:combine(1);merge 日魂(2);merge 月魄(3);sell 卖宝石(4)
local gem_cat="0"

local gem_level_list={"地","山","水","风","雷","火","泽","天"}
local gem_class_list={"精金","木灵","玄冰","炎晶","玉髓","神龙骨","凤凰羽","玄武甲","麒麟角","月魄"}
--local gem_class_list={"木灵","神龙骨","凤凰羽","玄武甲","麒麟角","日魂","月魄"}

local tGemSellList = {"精金","玄冰","炎晶","玉髓","日魂"};
local tGemSellLevel = {"地","山","雷"};
--local tGemSellLevel = {"地","山"};

local strGiveGemId = "suineg";
local strGiveGemLevel = "雷";
local strGiveGemName = "玄冰";

local tGemLevelSpecial={"水","风","雷","火"}

local num_pick_rihun={}


local gem_level={}
function gem_level_setting(arg)
	gem_level={}
	if gem_cat == "1" then
		for k,v in ipairs(gem_level_list) do
			if v~=arg then
				table.insert(gem_level,v)
			else 
				return
			end
		end
	else
		for k,v in ipairs(tGemLevelSpecial) do
			if v~=arg then
				table.insert(gem_level,v)
			else 
				return
			end
		end
	end
end

local gem_rihun_set_new=""
function gem_level_setting_rihun()
	gem_rihun_set_new=""
	for k,v in ipairs(gem_level_list) do
		if v==gem_rihun_set then
			gem_rihun_set_new=gem_level_list[k+1]	
		end
	end
	--Note("level:" .. gem_rihun_set_new);
	gem_level_setting(gem_rihun_set_new)
end

function gem_level_setting_yuehun()
	gem_yuehun_set_new=""
	for k,v in ipairs(gem_level_list) do
		if v==gem_yuepo_set then
			gem_yuehun_set_new=gem_level_list[k+1]	
		end
	end
	--Note("level:" .. gem_yuehun_set_new);
	gem_level_setting(gem_yuehun_set_new)
end

local gem_class={}
local gem_class_add={}
function gem_class_setting()
	gem_class={}
	if gem_cat=="1" then
		gem_class=gem_class_list
		gem_class_add=gem_class_list
		m_strGemNot = "";
	elseif gem_cat=="2" then
		gem_class={"炎晶","玉髓"}
		gem_class_add={"炎晶","玉髓","日魂"}
		m_strGemNot = "☆";
	elseif gem_cat=="3" then
		gem_class={"炎晶","精金","玄冰","玉髓"}
		gem_class_add={"炎晶","玄冰","玉髓","月魄"}
		m_strGemNot = "★";
	elseif gem_cat == "4" then
		gem_class = {"精金","玄冰","炎晶","玉髓"};
	end
end

local is_close=0

DoAfterSpecial(0.1,"combine_gem_first()",12)

function create_trigger(t_name, t_match, t_action, t_function, t_sent_to, t_group, t_En, t_youxian, t_multi_line)
	DeleteTrigger (t_name)
	AddTriggerEx (t_name, t_match, t_action, t_En + 8 + 32 + 1024+16384, -1, 0, "", t_function, t_sent_to, t_youxian)
	if t_multi_line and t_multi_line ~= "" then
		SetTriggerOption ( t_name, "multi_line", "y");
		SetTriggerOption ( t_name, "lines_to_match", t_multi_line);
		SetTriggerOption ( t_name, "match", t_match);
	end
	if t_group and t_group ~= "" then
		SetTriggerOption (t_name, "group", t_group)
	end
end

function combine_gem_first()
--	create_trigger("tri_combine_gem1","^\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");
--	create_trigger("tri_combine_gem2","^\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");
--	create_trigger("tri_combine_gem3","^\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");
--	create_trigger("tri_combine_gem4","^\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");
--	create_trigger("tri_combine_gem5","^\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})[☆★◎].(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");

	create_trigger("tri_combine_gem1","^\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");
	create_trigger("tri_combine_gem2","^\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");
	create_trigger("tri_combine_gem3","^\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");
	create_trigger("tri_combine_gem4","^\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");
	create_trigger("tri_combine_gem5","^\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+\\(([\\s\\d]{1,2})\\)(\\W{2})(\\W{2})(\\W+?)\\*(\\d+)\\s+$","--","fun_combine_gem",12,"combine_gem_new",0,95,"");

	create_trigger("tri_combine_gem6","^[>]*渐渐的你收回了内力，只觉(.+)似乎变得更加完美了！\\s*$","","GemAction",12,"combine_gem_new2",0,95,"");
	create_trigger("tri_combine_gem7",dazuo_finish_desc,"--","GemAction",12,"combine_gem_new2",0,95,"");
	create_trigger("tri_combine_gem8","^[>]*以你现在的内力修为，还无法运功合并宝石！\\s*$",'TimerFinishDelete();DoAfter(1,"sleep")',"",12,"combine_gem_new2",0,95,"");
	create_trigger("tri_combine_gem9","^用pack <物品id>将宝石放入其中，用pickgem <序号>取出其中的某一宝石。$","--","TimerFinishCreate",12,"combine_gem_new2",0,95,"");
	create_trigger("tri_combine_gem10","^[>]*渐渐的你收回了内力，只觉(.+)似乎完全变了模样！\\s*$","--","GemAction",12,"combine_gem_new2",0,95,"");
	create_trigger("tri_combine_gem11","^[>]*你现在气血严重不足，无法满足打坐最小要求。\\s*$","--","gem_close",12,"combine_gem_new2",0,95,"");
	create_trigger("tri_combine_gem12","^[>]*这里不是你能睡的地方！\\s*$",'DoAfter(1,"dazuo max")',"",12,"combine_gem_new2",0,95,"");
	create_trigger("tri_combine_gem13","^[>]*你刚在三分钟内睡过一觉.*\\s*$",'DoAfter(5,"sleep")',"",12,"combine_gem_new2",0,95,"");
	create_trigger("tri_combine_gem14","^这里没有.*$|^你要给谁.*$","--","GiveGemError",12,"combine_give_gem_error",0,95,"");
	
	DeleteAlias("alias_combine_gem1")
	AddAlias("alias_combine_gem1", "^cg (.*)$|^cg$", "",1+8 + 128 + 1024+16384, "combine_gem_begin"); 
	SetAliasOption ("alias_combine_gem1", "group", "combine_gem_new")

	DeleteAlias("alias_merge_gem1")
	AddAlias("alias_merge_gem1", "^mgr (.*)$|^mgr$", "",1+8 + 128 + 1024+16384, "merge_gem_rh_begin"); 
	SetAliasOption ("alias_merge_gem1", "group", "combine_gem_new")

	DeleteAlias("alias_merge_gem2")
	AddAlias("alias_merge_gem2", "^mgy (.*)$|^mgy$", "",1+8 + 128 + 1024+16384, "merge_gem_yp_begin"); 
	SetAliasOption ("alias_merge_gem2", "group", "combine_gem_new")

	DeleteAlias("alias_sell_gem")
	AddAlias("alias_sell_gem", "^SellGem$", "",1+8 + 128 + 1024+16384, "SellGemAlias"); 
	SetAliasOption ("alias_sell_gem", "group", "combine_gem_new")

	DeleteAlias("alias_give_gem")
	AddAlias("alias_give_gem", "^GiveGem (\\S+) (\\S+) ?(\\S*)$", "",1+8 + 128 + 1024+16384, "GiveGemAlias"); 
	SetAliasOption ("alias_give_gem", "group", "combine_gem_new")

end

function TimerFinishDelete()
	DeleteTimer("Gem_Finish");
end

function GemAction()
	SendNoEcho("pack gem");
	TimerFinishDelete();	
	if gem_cat=="1" then
		DoAfterSpecial(3, 'Execute("cg")', 12);
	else
		GemActionAgain();
	end
end

function GemActionAgain()
	TimerFinishDelete();
	if gem_cat=="1" then
		SendNoEcho("jiancha");
	else
		if m_nIndex <= table.getn(gem_level) then
			Note("合日月宝石开始:" .. gem_level[m_nIndex]);
			num_pick_rihun={};
			SendNoEcho("halt");
			DoAfterSpecial(2, 'SendNoEcho("jiancha")', 12);
		end
	end
end

function fun_combine_gem(_,l,w)	
	local i = 1;
	if is_continue=="0" and gem_cat == "1" then
		local num_pick = "";
		for i = 1, 5 do
			if w[1+(i-1)*5] ~= nil then
				if tonumber(w[5+(i-1)*5]) > 2 then
					if IsInTable(w[2+(i-1)*5], gem_level) and IsInTable(w[4+(i-1)*5], gem_class_add) and not IsInTable(w[4+(i-1)*5], gem_class_not) and not IsInTable(w[2+(i-1)*5]..w[4+(i-1)*5], gem_not) then
						num_pick = Trim(w[1+(i-1)*5]);
						break;
					end
				end
			end
		end
		if num_pick == "" then
			return;
		end

		--print("combine："..num_pick)

		Execute("do 3 pickgem "..num_pick)
		Execute("combine gem")
		Execute("do 3 pack gem")

		EnableTriggerGroup("combine_gem_new",false)
	elseif gem_cat == "4" then
		local num_pick = "";
		for i = 1, 5 do
			if w[1+(i-1)*5] ~= nil then
				if IsInTable(w[2+(i-1)*5], tGemSellLevel) and IsInTable(w[4+(i-1)*5], tGemSellList) then
					num_pick = Trim(w[1+(i-1)*5]);
					break;
				end
			end
		end
		if num_pick == "" then
			return;
		end
		is_continue = "1";
		--Execute("pickgem "..num_pick);
		Execute("pickgem "..num_pick .. ";dang gem");
		EnableTriggerGroup("combine_gem_new",false)
	elseif gem_cat == "5" then
		local num_pick = "";
		--if strGiveGemLevel ~= nil then
		--	Note("等级:" .. strGiveGemLevel);
		--end
		--if strGiveGemName ~= nil then
		--	Note("宝石:" .. strGiveGemName);
		--end
		for i = 1, 5 do
			if w[1+(i-1)*5] ~= nil then
				local bOK = true;
				if strGiveGemLevel ~= nil and strGiveGemLevel ~= "" then
					if w[2+(i-1)*5] ~= strGiveGemLevel then
						bOK = false;
					end
				end
				if strGiveGemName ~= nil and strGiveGemName ~= "" then
					if w[4+(i-1)*5] ~= strGiveGemName then
						bOK = false;
					end
				end
				if bOK then
					num_pick = Trim(w[1+(i-1)*5]);
					break;
				end
			end
		end
		if num_pick == "" then
			return;
		end
		is_continue = "1";
		Execute("pickgem "..num_pick .. ";give " .. strGiveGemId .. " gem");
		EnableTriggerGroup("combine_gem_new",false)
	else
		if table.getn(gem_level) > 0 and m_nIndex <= table.getn(gem_level) then
			if gem_cat=="2" then
				merge_doing(gem_level[m_nIndex], w);
			elseif gem_cat=="3" then
				merge_doing(gem_level[m_nIndex], w);
			end
		end
	end
end

function merge_doing(gem_set_mid,w)
	for i=1,5 do
		if w[1+(i-1)*5] == nil then break; end;
		--Note(w[1+(i-1)*5] .. ":" .. w[2+(i-1)*5] .. ":" .. w[3+(i-1)*5] .. ":" .. w[4+(i-1)*5] .. ":" .. w[5+(i-1)*5]);
		if table.getn(num_pick_rihun) < 3 and w[2+(i-1)*5] == gem_set_mid and IsInTable(w[4+(i-1)*5],gem_class) and w[3+(i-1)*5] ~= m_strGemNot then
			local n_temp;
			if w[4+(i-1)*5]=="玉髓" and tonumber(w[5+(i-1)*5])>2 then
				local nNum = tonumber(w[5+(i-1)*5]);
				if nNum > 2 then nNum = 2 end;
				n_temp = nNum;
			else
				n_temp = w[5+(i-1)*5]
			end
			--Note("找到宝石:" .. w[4+(i-1)*5] .. " 性质:" .. w[3+(i-1)*5] .." 数量:" .. n_temp);
			for j=1,n_temp do
				if table.getn(num_pick_rihun)<3 then
					table.insert(num_pick_rihun,Trim(w[1+(i-1)*5]))
				end
			end
		end
	end	
	--Note("找宝石结束:");
end

function SellGemAlias()
	gem_cat="4";
	is_continue="0";
	is_close=0;
	EnableTriggerGroup("combine_gem_new",true);
	EnableTriggerGroup("combine_gem_new2",true);
	Execute("halt");
	Execute("jiancha");
end

CheckValueInTable = function(tTable, strValue)
	if strValue == nil or strValue == "" then return nil; end
	for i = 1, #tTable do
		if strValue == tTable[i] then
			return i;
		end
	end
	return nil;
end

GiveGemAlias = function(strName, strLine, tWord)
	if tWord ~= nil then
		strGiveGemId = tWord[1];
		if tWord[3] ~= nil and tWord[3] ~= "" then
			strGiveGemLevel = tWord[2];
			strGiveGemName = tWord[3];
		else
			if CheckValueInTable(gem_level_list, tWord[2]) then
				Note("等级:" .. tWord[2]);
				strGiveGemLevel = tWord[2];
				strGiveGemName = "";
			elseif CheckValueInTable(gem_class_list, tWord[2]) then
				Note("宝石:" .. tWord[2]);
				strGiveGemLevel = "";
				strGiveGemName = tWord[2];
			end
		end
		if CheckValueInTable(gem_level_list, strGiveGemLevel) ~= nil or CheckValueInTable(gem_class_list, strGiveGemName) ~= nil then
			Note("开始给" .. strGiveGemId .. "宝石:" .. strGiveGemLevel .. strGiveGemName);
		else
			Note("数据错误,请重新输入");
			return;
		end
	end
	gem_cat="5";
	is_continue="0";
	EnableTriggerGroup("combine_gem_new",true);
	EnableTriggerGroup("combine_gem_new2",true);
	Execute("halt");
	Execute("jiancha");
end

function combine_gem_begin(_,_,w)
	gem_cat="1"
	gem_level_setting(gem_level_set)
	is_close=0
	is_continue="0"
	gem_class_setting()

	local temp=Trim(w[1])
	if temp=="" then
		Execute("halt")
		EnableTriggerGroup("combine_gem_new",true)
		EnableTriggerGroup("combine_gem_new2",true)
		Execute("jiancha");
	else		
		if temp=="list" then
			print("----------------当前合并升级宝石等级至："..gem_level_set.."----------------")
		elseif IsInTable(temp,gem_level_list) and temp~="地" then
			gem_level_set=temp
			print("-----------当前合并升级宝石等级设置为："..gem_level_set.."-----------")
		else
			print("--------请输入正确的合并升级宝石等级：天 泽 火 雷 风 水 山--------")
		end
	end			
end

function merge_gem_rh_begin(_,_,w)
	gem_cat="2"
	gem_level_setting_rihun()
	is_close=0
	is_continue="0"
	m_nIndex = 1;
	num_pick_rihun = {};
	gem_class_setting()

	local temp=Trim(w[1])
	if temp=="" then
		Execute("halt")
		EnableTriggerGroup("combine_gem_new",true)
		EnableTriggerGroup("combine_gem_new2",true)
		GemActionAgain();
	else		
		if temp=="list" then
			print("----------------当前合并日魂宝石等级至："..gem_rihun_set.."----------------")
		elseif IsInTable(temp,gem_level_list) and temp~="天" then
			gem_rihun_set=temp
			print("-----------当前合并日魂宝石等级设置为："..gem_rihun_set.."-----------")
		else
			print("--------请输入正确的合并日魂宝石等级：泽 火 雷 风 水 山 地--------")
		end
	end			
end

function merge_gem_yp_begin(_,_,w)
	gem_cat="3"
	gem_level_setting_yuehun()
	is_close=0
	is_continue="0"
	m_nIndex = 1;
	num_pick_rihun = {};
	gem_class_setting()

	local temp=Trim(w[1])
	if temp=="" then
		Execute("halt")
		EnableTriggerGroup("combine_gem_new",true)
		EnableTriggerGroup("combine_gem_new2",true)
		GemActionAgain();
	else		
		if temp=="list" then
			print("----------------当前合并月魄宝石等级至："..gem_yuepo_set.."----------------")
		elseif IsInTable(temp,gem_level_list) then
			gem_yuepo_set=temp
			print("-----------当前合并月魄宝石等级设置为："..gem_yuepo_set.."-----------")
		else
			print("--------请输入正确的合并月魄宝石等级：天 泽 火 雷 风 水 山 地--------")
		end
	end			
end

function TimerFinishCreate()
	if gem_cat == "4" or gem_cat == "5" then
		combine_gem_finish();
	elseif gem_cat ~= "1" and table.getn(num_pick_rihun)==3 then
		is_close=1
		m_bContinue = true;

		table.sort(num_pick_rihun,function(a,b) return tonumber(a)<tonumber(b) end)
	
		for i=3,1,-1 do
			Execute("pickgem "..num_pick_rihun[i])
			--print("pickgem "..num_pick_rihun[i])
		end

		--print("测试合并月魄")
		Execute("merge gem 1")
		Execute("merge gem 3")
		
		Execute("do 3 pack gem");
		--EnableTriggerGroup("combine_gem_new",false)
	else
		if gem_cat ~= "1" then
				m_nIndex = m_nIndex + 1;
				if m_nIndex <= table.getn(gem_level) then
					GemActionAgain();
				else
					EnableTriggerGroup("combine_gem_new",false)
					EnableTriggerGroup("combine_gem_new2",false)	
					print("-----------宝石合并月魄完毕！-------------")
				end
		else
			DeleteTimer("Gem_Finish");
			AddTimer("Gem_Finish", 0, 0, 2, "", 1025, "combine_gem_finish");
			SetTimerOption("Gem_Finish", "one_shot", true);
		end
	end
end

function combine_gem_finish()
	--test_debug()
	if is_close==0 then
		if gem_cat == "1" then
			EnableTriggerGroup("combine_gem_new",false)
			EnableTriggerGroup("combine_gem_new2",false)	
			print("-----------宝石合并升级完毕！-------------")
		elseif gem_cat == "2" then
			if is_continue=="0" then
				print("------------开始合并日魂宝石--------------")
				m_bContinue = false;
				is_continue="1"
				GemActionAgain();
			else
				m_nIndex = m_nIndex + 1;
				if m_nIndex <= table.getn(gem_level) then
					GemActionAgain();
				else
					EnableTriggerGroup("combine_gem_new",false)
					EnableTriggerGroup("combine_gem_new2",false)	
					print("-----------宝石合并日魂完毕！-------------")
				end
			end	
		elseif gem_cat == "3" then
			if is_continue=="0" then
				print("------------开始合并月魄宝石--------------")
				m_bContinue = false;
				is_continue="1"
				GemActionAgain();
			else
				m_nIndex = m_nIndex + 1;
				if m_nIndex <= table.getn(gem_level) then
					GemActionAgain();
				else
					EnableTriggerGroup("combine_gem_new",false)
					EnableTriggerGroup("combine_gem_new2",false)	
					print("-----------宝石合并月魄完毕！-------------")
				end
			end
		elseif gem_cat == "4" then
			if is_continue == "1" then
				merge_gem_continue();
			else
				EnableTriggerGroup("combine_gem_new",false);
				EnableTriggerGroup("combine_gem_new2",false);
				print("-----------卖宝石完毕！-------------");
			end
		elseif gem_cat == "5" then
			if is_continue == "1" then
				merge_gem_continue();
			else
				EnableTriggerGroup("combine_gem_new",false);
				EnableTriggerGroup("combine_gem_new2",false);
				print("-----------给宝石完毕！-------------");
			end
		end
	end
end

GiveGemError = function()				
	EnableTriggerGroup("combine_gem_new",false);
	EnableTriggerGroup("combine_gem_new2",false);
	print("-----------对象不见,给宝石中断-------------");
	SendNoEcho("pack gem");
end

function merge_gem_continue()
	if gem_cat=="2" then
		DoAfterSpecial(3,"mgr",10)
	elseif gem_cat=="3" then
		DoAfterSpecial(3,"mgy",10)
	elseif gem_cat == "4" then
		DoAfterSpecial(1, "SellGem", 10);
	elseif gem_cat == "5" then
		DoAfterSpecial(1, "GiveGemAlias()", 12);
	end
end

function gem_close()
	EnableTriggerGroup("combine_gem_new",false)
	EnableTriggerGroup("combine_gem_new2",false)
	print("------------关闭合宝石触发--------------")
end

function IsInTable(value, tbl)
	for k,v in ipairs(tbl) do
		if v == value then
			return true;
		end
	end
	return false;
end

]]>
</script>


</muclient>
